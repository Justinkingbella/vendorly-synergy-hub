
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { PostgrestFilterBuilder } from '@supabase/postgrest-js';

const SUPABASE_URL = "https://qkzjmedpwqskvbqwtujr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFremptZWRwd3Fza3ZicXd0dWpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM1MTcyNjAsImV4cCI6MjA1OTA5MzI2MH0.iFChdfKR_KIix9V3Ltx6qcj4q8w4P-OvaK-0pTHVFHc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Type definition helper functions
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row'];
export type InsertTables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert'];
export type UpdateTables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update'];

// Direct database access helper that handles untyped tables
export const rawQuery = {
  from: (tableName: string) => {
    return supabase.from(tableName as any);
  }
};

// Type-safe standard app_settings table functions 
export const appSettingsTable = () => {
  return supabase.from('app_settings');
};
export type AppSetting = Tables<'app_settings'>;
export type InsertAppSetting = InsertTables<'app_settings'>;
export type UpdateAppSetting = UpdateTables<'app_settings'>;

// Custom types for tables not in types.ts

// Interface for store_theme_settings table
export interface StoreThemeSettingsRow {
  id: string;
  mode: 'light' | 'dark' | 'system';
  primary_color: string;
  secondary_color: string;
  accent_color: string;
  font_family: string;
  border_radius: string;
  custom_css?: string;
  created_at: string;
  updated_at: string;
}

export interface StoreThemeSettingsInsert {
  id?: string;
  mode?: 'light' | 'dark' | 'system';
  primary_color?: string;
  secondary_color?: string;
  accent_color?: string;
  font_family?: string;
  border_radius?: string;
  custom_css?: string;
  created_at?: string;
  updated_at?: string;
}

// Interface for subscription_plans table
export interface SubscriptionPlanRow {
  id: string;
  name: string;
  price: number;
  description?: string;
  popular?: boolean;
  features: string[];
  not_included: string[];
  created_at: string;
  updated_at: string;
}

export interface SubscriptionPlanInsert {
  id?: string;
  name: string;
  price: number;
  description?: string;
  popular?: boolean;
  features?: string[];
  not_included?: string[];
  created_at?: string;
  updated_at?: string;
}

// Custom wrapper for subscription_plans table
export const subscriptionPlansTable = () => {
  return rawQuery.from('subscription_plans');
};
export type SubscriptionPlan = SubscriptionPlanRow;

// Custom wrapper for store_theme_settings table
export const storeThemeSettingsTable = () => {
  return rawQuery.from('store_theme_settings');
};
export type StoreThemeSetting = StoreThemeSettingsRow;
