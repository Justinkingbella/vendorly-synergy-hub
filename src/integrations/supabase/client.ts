
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://qkzjmedpwqskvbqwtujr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFremptZWRwd3Fza3ZicXd0dWpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM1MTcyNjAsImV4cCI6MjA1OTA5MzI2MH0.iFChdfKR_KIix9V3Ltx6qcj4q8w4P-OvaK-0pTHVFHc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Type definition helper functions
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row'];
export type InsertTables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert'];
export type UpdateTables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update'];

// Custom type definitions for tables not yet in types.ts
// These will be used until the types.ts file is regenerated with the new tables

// Interface for store_theme_settings table
interface StoreThemeSettingsRow {
  id: string;
  mode: 'light' | 'dark' | 'system';
  primary_color: string;
  secondary_color: string;
  accent_color: string;
  font_family: string;
  border_radius: string;
  custom_css?: string;
  created_at: string;
  updated_at: string;
}

interface StoreThemeSettingsInsert {
  id?: string;
  mode?: 'light' | 'dark' | 'system';
  primary_color?: string;
  secondary_color?: string;
  accent_color?: string;
  font_family?: string;
  border_radius?: string;
  custom_css?: string;
  created_at?: string;
  updated_at?: string;
}

// Interface for subscription_plans table
interface SubscriptionPlanRow {
  id: string;
  name: string;
  price: number;
  description?: string;
  popular?: boolean;
  features: string[];
  not_included: string[];
  created_at: string;
  updated_at: string;
}

interface SubscriptionPlanInsert {
  id?: string;
  name: string;
  price: number;
  description?: string;
  popular?: boolean;
  features?: string[];
  not_included?: string[];
  created_at?: string;
  updated_at?: string;
}

// Type-safe wrapper functions
export const appSettingsTable = () => supabase.from('app_settings');
export type AppSetting = Tables<'app_settings'>;
export type InsertAppSetting = InsertTables<'app_settings'>;
export type UpdateAppSetting = UpdateTables<'app_settings'>;

// Custom wrapper for subscription_plans table
export const subscriptionPlansTable = () => supabase.from<SubscriptionPlanRow>('subscription_plans');
export type SubscriptionPlan = SubscriptionPlanRow;
export type InsertSubscriptionPlan = SubscriptionPlanInsert;
export type UpdateSubscriptionPlan = Partial<SubscriptionPlanInsert>;

// Custom wrapper for store_theme_settings table
export const storeThemeSettingsTable = () => supabase.from<StoreThemeSettingsRow>('store_theme_settings');
export type StoreThemeSetting = StoreThemeSettingsRow;
export type InsertStoreThemeSetting = StoreThemeSettingsInsert;
export type UpdateStoreThemeSetting = Partial<StoreThemeSettingsInsert>;
